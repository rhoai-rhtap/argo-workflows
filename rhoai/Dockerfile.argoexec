ARG SOURCE_CODE=.
ARG CI_CONTAINER_VERSION="unknown"
ARG CI_CONTAINER_RELEASE="unknown"
# Builder args
ARG GIT_COMMIT=unknown
ARG GIT_TAG=unknown
ARG GIT_TREE_STATE=unknown

FROM registry.redhat.io/ubi8/go-toolset:1.21 as builder

# Build args to be used at this step
ARG SOURCE_CODE
WORKDIR /workspace

USER root
RUN dnf install -y mailcap

WORKDIR /workspace

# Copy Go module files first to leverage Docker layer caching
COPY ${SOURCE_CODE}/go.mod .
COPY ${SOURCE_CODE}/go.sum .

# Download dependencies early to utilize cache more effectively
RUN go mod download

# Copy the rest of the source code
COPY ${SOURCE_CODE}/ ./

# Set the /workspace directory as safe for Git
RUN git config --global --add safe.directory /workspace

# Run the build with caching and disable VCS stamping
RUN --mount=type=cache,target=/go/pkg/mod --mount=type=cache,target=/root/.cache/go-build \
    make dist/argoexec GIT_COMMIT=${GIT_COMMIT} GIT_TAG=${GIT_TAG} GIT_TREE_STATE=${GIT_TREE_STATE}


####################################################################################################
FROM registry.access.redhat.com/ubi8/ubi:latest AS argoexec

ARG CI_CONTAINER_VERSION

LABEL com.redhat.component="odh-data-science-pipelines-argo-argoexec-container" \
      name="managed-open-data-hub/odh-data-science-pipelines-argo-argoexec-rhel8" \
      version="${CI_CONTAINER_VERSION}" \
      git.url="${CI_ARGO_WORKFLOWS_UPSTREAM_URL}" \
      git.commit="${CI_ARGO_WORKFLOWS_UPSTREAM_COMMIT}" \
      summary="odh-data-science-pipelines-argo-argoexec" \
      io.openshift.expose-services="" \
      io.k8s.display-name="odh-data-science-pipelines-argo-argoexec" \
      maintainer="['managed-open-data-hub@redhat.com']" \
      description="Argo Executor for Argo Workflows used in Data Science Pipelines" \
      com.redhat.license_terms="https://www.redhat.com/licenses/Red_Hat_Standard_EULA_20191108.pdf"

WORKDIR /bin

COPY --from=builder /workspace/dist/argoexec /bin/
COPY --from=builder /etc/mime.types /etc/mime.types
COPY --from=builder /workspace/hack/ssh_known_hosts /etc/ssh/
COPY --from=builder /workspace/hack/nsswitch.conf /etc/

RUN chmod +x /bin/argoexec

USER 2000

ENTRYPOINT [ "/bin/argoexec" ]
